{"version":3,"sources":["components/CommentTag.js","components/TagContainer.js","components/StudentCard.js","App.js","reportWebVitals.js","index.js"],"names":["CommentTag","props","className","tag","TagContainer","tagArray","map","StudentCard","useState","expanded","setExpaneded","handleExpansion","boolExpansion","id","document","getElementById","style","display","useEffect","tagValue","setTagValue","myTags","setMyTags","src","imgLink","alt","studentName","textAlign","padding","paddingBottom","onClick","email","company","skills","gradeAvgPercent","gradeAvgArray","type","placeholder","value","onChange","e","target","onKeyPress","keyboardValue","key","App","studentData","setStudentData","nameSearched","setNameSearched","searchResults","setSearchResults","a","fetch","json","assessAPI","students","student","average","sum","count","grades","parseInt","length","firstName","toUpperCase","lastName","skill","pic","grade","index","getStudentContentAPI","searchValue","lowerCaseSearch","toLowerCase","searchLength","searchHits","nameSpaceIndex","indexOf","slice","handleNameSearch","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.61392bf3.chunk.js","sourcesContent":["import React from 'react';\n\nexport default  function CommentTag(props) {\n    return (\n        <div className='tag'>\n            {props.tag}\n        </div>\n    )\n}\n\n","import React from 'react';\nimport CommentTag from './CommentTag';\n\nexport default function TagContainer(props) {\n    return (\n        <div className='tags-container'>\n            {props.tagArray.map((tag) => <CommentTag tag={tag}></CommentTag>)}\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport TagContainer from './TagContainer';\n\nexport default function StudentCard(props) {\n\n    const [expanded, setExpaneded] = useState(false);\n    const handleExpansion = (boolExpansion, id) => {\n        if (boolExpansion === false) {\n            document.getElementById(id).style.display = 'block';\n            setExpaneded(true);\n        } else {\n            document.getElementById(id).style.display = 'none';\n            setExpaneded(false);\n        }\n    }\n\n    useEffect(() => {\n        document.getElementById(props.id).style.display = 'none';\n    }, [props.id])\n\n    const [tagValue, setTagValue] = useState(\"\");\n    const [myTags, setMyTags] = useState([])\n\n    const handleEnterKey = (keyboardValue) => {\n        if (keyboardValue.key === 'Enter') {\n            setMyTags([...myTags, keyboardValue.target.value]);\n            setTagValue(\"\");\n        }\n    }\n    return (\n            <div className='single-student-container'>\n                <img src={props.imgLink} alt={props.studentName} className='student-photo'></img> \n                <div className='student-content'>\n                    <h1 className='studentName'><b>{props.studentName}</b></h1>\n                    <div style={{textAlign: 'right', padding: '0.5em', paddingBottom: '0'}}>\n\n                        {expanded === true ? <button onClick={() => handleExpansion(expanded, props.id)} className='btn-expansion'><b>-</b></button> : \n                        <button onClick={() => handleExpansion(expanded, props.id)} className='btn-expansion'><b>&#x2b;</b></button>}\n                    </div>\n\n                    <div className='student-contactInfo'>\n                        Email: {props.email} <br></br>\n                        Company: {props.company} <br></br>\n                        Skills: {props.skills} <br></br>\n                        Average: {props.gradeAvgPercent}%\n                       \n                        <div id={props.id}>\n                            <br></br>\n                            {props.gradeAvgArray}\n                        </div>\n                        <br></br>\n                        <div className='add-tag-container'>\n                            <TagContainer tagArray={myTags}></TagContainer>\n                            <input type='text' placeholder='Add a tag'  value={tagValue} onChange={e => setTagValue(e.target.value)} className='tag-input' onKeyPress={e => handleEnterKey(e)}></input>\n                            <br></br>\n                        </div>\n                    </div>\n                   \n                </div>\n            </div> \n    )\n}\n","/** This code is written by bemnet dejene on Jan 4 2021\n * Purpose of project is an assessment from hatchway of my front end skills => clone webapp using frontend framework and style with HTML and CSS\n * \n */\n\n\nimport StudentCard from './components/StudentCard'\nimport './App.css';\nimport { useEffect, useState } from 'react';\n\n\n\n\nfunction App() {\n  const [studentData, setStudentData] = useState(\"\");\n  const [nameSearched, setNameSearched] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  // const [tagSearched, setTagSearched] = useState(\"\");\n  // const [tagSearchResults, setTagSearchResults] = useState([]);\n\n  useEffect(() => {\n    async function getStudentContentAPI() {\n      let assessAPI = await (await fetch('https://api.hatchways.io/assessment/students')).json();\n      let students = assessAPI.students;\n      setStudentData(students.map((student)=> {\n        let sum = 0;\n        let average = 0;\n\n        for (let count in student.grades) {\n          sum += parseInt(student.grades[count]);\n        }\n        average = sum / student.grades.length;\n\n        return (\n          <StudentCard key={student.id} id={student.id} studentName={`${student.firstName.toUpperCase()} ${student.lastName.toUpperCase()}`} \n                    email={student.email} company={student.company} \n                    skills={student.skill} imgLink={student.pic} \n                    gradeAvgPercent={average}\n                    gradeAvgArray={student.grades.map((grade, index) => <p className='test-history'>Test {index + 1}: {grade}%</p>)}\n                    >\n          </StudentCard>\n        )\n      })\n    )}\n    getStudentContentAPI()\n   }, []);\n\n\n  const handleNameSearch = (searchValue) => {\n    let lowerCaseSearch = searchValue.toLowerCase();\n    setNameSearched(lowerCaseSearch);\n    \n    let searchLength = lowerCaseSearch.length;\n    let searchHits = studentData.map((student) => {\n      let studentName = student.props.studentName.toLowerCase();\n      let nameSpaceIndex = studentName.indexOf(' ');\n\n      if (studentName.slice(0, searchLength) === lowerCaseSearch) {\n        return student;\n      } else if (studentName.slice(nameSpaceIndex + 1, (nameSpaceIndex + 1) + searchLength) === lowerCaseSearch) {\n        return student;\n      } else {\n        return null;\n        }\n      })\n      setSearchResults(searchHits);\n  }\n\n  // const handleTagSearch = (tagSearch) => {\n  //   let tagSearchLower = tagSearch.toLowerCase();\n  //   let searchLength = tagSearchLower.length;\n  //   setTagSearched(tagSearchLower);\n\n\n  //   let myTags = document.querySelectorAll('.tags-container');\n    \n  //   for (let count in myTags) {\n  //     let tagArray = myTags[count].children;\n  //     for (let count in tagArray) {\n  //       let currTagValue = tagArray[count].innerHTML;\n  //       if (currTagValue !== null && currTagValue !== undefined) {\n  //         if (currTagValue.slice(0, searchLength).toLowerCase() === tagSearchLower) {\n  //           console.log(myTags)\n  //         } else {\n  //           document.getElementById(count).style.display = 'none';\n  //         }\n  //       } \n  //     }\n  //   }\n  // }\n\n  return (\n  <div className=\"body-wrapper\">\n    <div className='student-content-wrapper'>\n      <input type='text' placeholder='Search by name' className='search' id='name-search' value={nameSearched} onChange={e => handleNameSearch(e.target.value)}></input>\n      {/* <input type='text' placeholder='Search by tag' className='search' id='tag-search' value={tagSearched} onChange={e => handleTagSearch(e.target.value)}></input> */}\n      <div  className='student-list'>\n        {nameSearched.length === 0 ? studentData : searchResults}\n\n        {/* {tagSearchResults} */}\n      </div>\n    </div>\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}